#!groovy

properties([
    [
        $class: 'GithubProjectProperty',
        displayName: 'Evidence NPA App',
        projectUrlStr: 'https://github.com/hmcts/rpa-native-pdf-annotator-app'
    ],
    pipelineTriggers([
        [$class: 'GitHubPushTrigger']
    ])
])

@Library("Infrastructure")

def type = "java"
def product = "em"
def component = "npa"
def vault = 'rpa-${env}'
def channel = '#rpa-pipeline'

def secrets = [
    'rpa-${env}': [
        secret('em-s2s-token', 'S2S_TOKEN'),
        secret('AppInsightsInstrumentationKey', 'APPINSIGHTS_INSTRUMENTATIONKEY'),
    ],
    's2s-${env}'      : [
        secret('microservicekey-em-npa-app', 'S2S_KEY')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

// Vars needed for AKS testing - keep values in sync with: /src/kubernetes/deployment.template.yaml
// THESE WILL BE OVERWRITTEN IN ASE DEPLOYMENTS WITH TERRAFORM OUTPUTS.TF
// THESE CAN BE PICKED UP IN INTEGRATION-TEST CODE DIRECTLY
env.IDAM_API_URL = 'https://preprod-idamapi.reform.hmcts.net:3511'
env.S2S_URL = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
env.DM_STORE_APP_URL = 'http://dm-store-aat.service.core-compute-aat.internal'
env.EM_ANNO_APP_URL = 'http://em-anno-aat.service.core-compute-aat.internal'

withPipeline(type , product, component) {
    enableSlackNotifications(channel)

//    enablePerformanceTest(15)
//    enableApiGatewayTest(15)
//    enableFullFunctionalTest(30)
//    enableMutationTest(120)
//    enableCrossBrowserTest(120)
    loadVaultSecrets(secrets)
    enableDockerBuild()
    enableDeployToAKS()

    //setVaultName(vault)


    after('checkout') {
        echo '${product}-${component} out'
        sh '''
mkdir -p application/src/main/resources/META-INF
echo "allprojects { task printVersionInit { doLast { println project.version } } }" > init.gradle

tee application/src/main/resources/META-INF/build-info.properties <<EOF 2>/dev/null
build.version=$(./gradlew -q printVersion)
build.number=${BUILD_NUMBER}
build.commit=$(git rev-parse HEAD)
build.date=$(date)
EOF

'''
    }

}
